#creating a linkedlist -Declaration and Definition
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class singlelinkedlist:
    def __init__(self):
        self.head=None
    def display(self):
        if self.head is None:
            print("Linkedlist is empty")
        else:
            temp=self.head#temp at first node
            while temp:
                print(temp.data,"->",end="")
                #temp data means first node data
                temp=temp.next#establishing link
obj=singlelinkedlist()
#Node creation initializing
n=Node(1)#so n data in node class will be 1
obj.head=n#assigining 1st node as head
n1=Node(2)
n.next=n1#next node value
n2=Node(3)
n1.next=n2
obj.display()

#example2 of creating alist
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class singlelinkedlist:
    def __init__(self):
        self.head=None
    def display(self):
        if self.head is None:
            print("List is empty")
        else:
            temp=self.head
            while temp:
                print(temp.data,"->",end="")
                temp=temp.next
obj=singlelinkedlist()
n=Node('W')
obj.head=n
n1=Node('I')
n.next=n1
n2=Node('N')
n1.next=n2
n3=Node('N')
n2.next=n3
n4=Node('E')
n3.next=n4
n5=Node('R')
n4.next=n5

obj.display()
         
#inserting at beginning
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class singlelinkedlist:
    def __init__(self):
        self.head=None
    def insert_beginning(self,data):
        nb=Node(data)
        nb.next=self.head
        self.head=nb
    def display(self):
        if self.head is None:
            print("List is empty")
        else:
            temp=self.head
            while temp:
                print(temp.data,"->",end="")
                temp=temp.next
obj=singlelinkedlist()
n=Node(10)
obj.head=n
n1=Node(20)
n.next=n1
n2=Node(30)
n1.next=n2
n3=Node(40)
n2.next=n3
n4=Node(50)
n3.next=n4
print("Before inserting 100")
obj.display()
print("")
print("After inserting 100")
obj.insert_beginning(100)
obj.display()
print("After inserting 555")
obj.insert_beginning(555)
obj.display()

#inserting end
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class singlelinkedlist:
    def __init__(self):
        self.head=None
    def insert_end(self,data):
        ne=Node(data)
        temp=self.head
        while temp.next:
            temp=temp.next
        temp.next=ne
    def display(self):
        if self.head is None:
            print("List is empty")
        else:
            temp=self.head
            while temp:
                print(temp.data,"->",end="")
                temp=temp.next
obj=singlelinkedlist()
n=Node(10)
obj.head=n
n1=Node(20)
n.next=n1
n2=Node(30)
n1.next=n2
n3=Node(40)
n2.next=n3
n4=Node(50)
n3.next=n4
print("Before inserting 100")
obj.display()
print("")
print("After inserting 11111")
obj.insert_end(11111)
obj.display()


#inserting at a position
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class singlelinkedlist:
    def __init__(self):
        self.head=None
    def insert_position(self,pos,data):
        np=Node(data)
        temp=self.head
        for i in range(pos-1):
            temp=temp.next
        np.next=temp.next    
        temp.next=np
    def display(self):
        if self.head is None:
            print("List is empty")
        else:
            temp=self.head
            while temp:
                print(temp.data,"->",end="")
                temp=temp.next
obj=singlelinkedlist()
n=Node(10)
obj.head=n
n1=Node(20)
n.next=n1
n2=Node(30)
n1.next=n2
n3=Node(40)
n2.next=n3
n4=Node(50)
n3.next=n4
print("Before inserting 100")
obj.display()
print("")
print("After inserting 11111")
obj.insert_position(2,11111)
obj.display()

#user defined input for linkedlist
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class linkedlist:
    def __init__(self):
        self.head=None
        self.last_node=None
    def append(self,data):
        if self.last_node is None:
            self.head=Node(data)
            self.last_node=self.head
        else:
            self.last_node.next=Node(data)
            self.last_node=self.last_node.next
    def display(self):
        current=self.head
        while current is not None:
            print(current.data,end="")
            current=current.next
a_1list=linkedlist()
n=int(input("How many numbers would you like to enter: "))
for i in range(n):
    data=int(input("Enter data item: "))
    a_1list.append(data)
print("The linked list: ",end="")
a_1list.display()